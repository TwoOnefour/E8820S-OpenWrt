##
#
# 感谢p3terx大神的一键编译脚本
# 
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#
#修改以下代码或者开启触发开关都好，要严格按格式对好,前面有多少空格也要看清楚
#代码里有 name: 后面的内容随便改,冒号后面是有个空格的,如果修改固件名字就要考虑能不能显示出你想要的

permissions:
  contents: write
  actions: write
name: E8820S 官方源码 openwrt-23.05

on: 
  release:
    types: [published]

#编辑任意指定文件触发开始编译(去掉下面5个#开启,最下面一行是指定修改什么文件就触发编译,我现在是修改diy.config文件触发)
#  push:
#    branches:
#      - master
#    paths:
#      - '.config'


#release发布触发开始编译(只是一个触发条件,不会发布的,又麻烦,没卵用,不用研究)
#  release:
#    types: published


#定时触发开始编译(把下面两个#去掉开启,时间设置请看定时编译说明)
#  schedule:
#    - cron: 0 20 * * 6


#点☆Star触发开始编译
  watch:
    types: started


env:
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: openwrt-23.05
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: config/e8820s-official-openwrt-latest.config
  DIY_P1_SH: script/diy-part1.sh
  DIY_P2_SH: script/diy-part2.sh
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: true
  UPLOAD_WETRANSFER: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  PATCH1: patch/0001-ZTE8820S.patch
  
jobs:
  build:
    name: 编译E8820S 官方源码 openwrt-23.05
    runs-on: ubuntu-22.04

    steps:
    - name: 准备结束
      uses: actions/checkout@main

    #- name: Clean up previous failed workflow runs
      #uses: mattraks/delete-workflow-runs@v2
      #with: 
          #token: ${{ secrets.GITHUB_TOKEN }}
          #repository: ${{ github.repository }}
          #retain_days: 0 
          #keep_minimum_runs: 0      
          #delete_run_by_conclusion_pattern: "failure,cancelled,skipped,timed_out" # 删除这些状态的记录

    - name: Free Up Disk Space
      run: |
          echo "Initial disk space:"
          df -hT
          
          # 删除大型预装软件
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"

          # 如果有 swap 文件，也可以清理
          sudo swapoff -a
          sudo rm -f /mnt/swapfile
          
          echo "Disk space after cleanup:"
          df -hT

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo apt update
        sudo apt install build-essential clang flex bison g++ gawk \
        gcc-multilib g++-multilib gettext git libncurses-dev libssl-dev \
        python3-distutils python3-setuptools rsync swig unzip zlib1g-dev file wget
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
    
    - name: 下载固件源码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: 应用patch
      run: cd /workdir/openwrt && patch -p0001 < $GITHUB_WORKSPACE/$PATCH1
      
    - name: 加载Cache缓存
      uses: klever1988/cachewrtbuild@main
      with:
        ccache: 'true'
        prefix: ${{ github.workspace }}/openwrt
      
    - name: 加载feeds跟自定义插件
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: 下载feeds跟安装自定义插件
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: 加载.config设置
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: 下载软件包
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: 开始编译固件
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        # make toolchain/clean
        # make toolchain/install || make toolchain/install -j1 V=sc
        # make -j$(nproc) || make -j1 || make -j1 V=s
        # make toolchain/install -j$(nproc)
        make -j$(nproc)
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        
    - name: 检查github储存空间情况
      if: (!cancelled())
      run: df -hT

    - name: Organize files
      id: organize
      run: |
        cd openwrt/bin
        # rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware + ipk repos
      uses: actions/upload-artifact@v4
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt-E8820S-official-23.05
        path: ${{ env.FIRMWARE }}
    
    - name: Publish firmware *.bin to Release
      uses: softprops/action-gh-release@v2
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: OpenWrt-23.05-${{ github.run_number }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/targets/*/*/*.bin
